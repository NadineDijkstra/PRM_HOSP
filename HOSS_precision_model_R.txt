model {

# Sample sensory data
for (i in 1 : nsamples) {
    # first draw sample of W from Dirichlet prior
    w[i] ~ dcat(pW)
    X[i,] ~ dmnorm(mu[w[i],], tau)
  }

  pA ~ dbeta(aA, bA) I(0.01,0.99)
  pR ~ dbeta(aR, bR) I(0.01,0.99) 

  alpha[1] <- perceptlambda*(1-pA)
  alpha[2] <- perceptlambda*pA*w1prior
  alpha[3] <- perceptlambda*pA*w2prior
  pW[1:3] ~ ddirch(alpha)

  ## covvariance components

  # prior on sensory precision (parameterise in terms of shape and rate, https://www.pymc.io/projects/docs/en/stable/api/distributions/generated/pymc.Gamma.html)

  mu_gamma <- 1 + 2*pR
  sigma_gamma <- 0.1
  alpha_gamma <- pow(mu_gamma,2) / pow(sigma_gamma,2)
  beta_gamma <- mu_gamma / pow(sigma_gamma,2)
  senselambda ~ dgamma(alpha_gamma, beta_gamma)

  # sensory variance in X
  tau[1,1] <- senselambda
  tau[1,2] <- 0
  tau[2,1] <- 0
  tau[2,2] <- senselambda

}
